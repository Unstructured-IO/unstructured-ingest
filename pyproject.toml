[project]
name = "unstructured_ingest"
description = "Local ETL data pipeline to get data RAG ready"
requires-python = ">=3.9, <3.13"
authors = [{name = "Unstructured Technologies", email = "devops@unstructuredai.io"}]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
readme = "README.md"
license = "Apache-2.0"
dynamic = ["version", "dependencies", "optional-dependencies"]

[tool.hatch.metadata.hooks.requirements_txt]
files = ["requirements/base.txt"]

[tool.hatch.metadata.hooks.requirements_txt.optional-dependencies]
# Connectors
airtable = ["requirements/connectors/airtable.txt"]
astradb = ["requirements/connectors/astradb.txt"]
azure-ai-search = ["requirements/connectors/azure-ai-search.txt"]
azure = ["requirements/connectors/azure.txt"]
biomed = ["requirements/connectors/biomed.txt"]
box = ["requirements/connectors/box.txt"]
chroma = ["requirements/connectors/chroma.txt"]
clarifai = ["requirements/connectors/clarifai.txt"]
confluence = ["requirements/connectors/confluence.txt"]
couchbase = ["requirements/connectors/couchbase.txt"]
databricks-delta-tables = ["requirements/connectors/databricks-delta-tables.txt"]
databricks-volumes = ["requirements/connectors/databricks-volumes.txt"]
delta-table = ["requirements/connectors/delta-table.txt"]
discord = ["requirements/connectors/discord.txt"]
dropbox = ["requirements/connectors/dropbox.txt"]
duckdb = ["requirements/connectors/duckdb.txt"]
elasticsearch = ["requirements/connectors/elasticsearch.txt"]
gcs = ["requirements/connectors/gcs.txt"]
github = ["requirements/connectors/github.txt"]
gitlab = ["requirements/connectors/gitlab.txt"]
google-drive = ["requirements/connectors/google-drive.txt"]
hubspot = ["requirements/connectors/hubspot.txt"]
ibm-watsonx-s3 = ["requirements/connectors/ibm-watsonx-s3.txt"]
jira = ["requirements/connectors/jira.txt"]
kafka = ["requirements/connectors/kafka.txt"]
kdbai = ["requirements/connectors/kdbai.txt"]
lancedb = ["requirements/connectors/lancedb.txt"]
milvus = ["requirements/connectors/milvus.txt"]
mongodb = ["requirements/connectors/mongodb.txt"]
neo4j = ["requirements/connectors/neo4j.txt"]
notion = ["requirements/connectors/notion.txt"]
onedrive = ["requirements/connectors/onedrive.txt"]
opensearch = ["requirements/connectors/opensearch.txt"]
outlook = ["requirements/connectors/outlook.txt"]
pinecone = ["requirements/connectors/pinecone.txt"]
postgres = ["requirements/connectors/postgres.txt"]
qdrant = ["requirements/connectors/qdrant.txt"]
reddit = ["requirements/connectors/reddit.txt"]
redis = ["requirements/connectors/redis.txt"]
s3 = ["requirements/connectors/s3.txt"]
salesforce = ["requirements/connectors/salesforce.txt"]
sftp = ["requirements/connectors/sftp.txt"]
sharepoint = ["requirements/connectors/sharepoint.txt"]
singlestore = ["requirements/connectors/singlestore.txt"]
slack = ["requirements/connectors/slack.txt"]
snowflake = ["requirements/connectors/snowflake.txt"]
vastdb = ["requirements/connectors/vastdb.txt"]
vectara = ["requirements/connectors/vectara.txt"]
weaviate = ["requirements/connectors/weaviate.txt"]
wikipedia = ["requirements/connectors/wikipedia.txt"]
zendesk = ["requirements/connectors/zendesk.txt"]

# Embedders
bedrock = ["requirements/embed/bedrock.txt"]
huggingface = ["requirements/embed/huggingface.txt"]
mixedbreadai = ["requirements/embed/mixedbreadai.txt"]
octoai = ["requirements/embed/octoai.txt"]
openai = ["requirements/embed/openai.txt"]
togetherai = ["requirements/embed/togetherai.txt"]
vertexai = ["requirements/embed/vertexai.txt"]
voyageai = ["requirements/embed/voyageai.txt"]

# remote
remote = ["requirements/remote/client.txt"]

# local partition
doc = ["requirements/local_partition/doc.txt"]
docx = ["requirements/local_partition/docx.txt"]
epub = ["requirements/local_partition/epub.txt"]
image = ["requirements/local_partition/image.txt"]
md = ["requirements/local_partition/md.txt"]
msg = ["requirements/local_partition/msg.txt"]
odt = ["requirements/local_partition/odt.txt"]
org = ["requirements/local_partition/org.txt"]
pdf = ["requirements/local_partition/pdf.txt"]
ppt = ["requirements/local_partition/ppt.txt"]
pptx = ["requirements/local_partition/pptx.txt"]
rst = ["requirements/local_partition/rst.txt"]
rtf = ["requirements/local_partition/rtf.txt"]
tsv = ["requirements/local_partition/tsv.txt"]
xlsx = ["requirements/local_partition/xlsx.txt"]


[tool.hatch.version]
path = "unstructured_ingest/__version__.py"

[dependency-groups]
release = [
    "twine",
    "wheel",
    "build"
]
lint = [
    "ruff",
]
test = [
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "pytest-check",
    "pytest-asyncio",
    "pytest_tagging",
    "pytest-json-report",
    "pytest-timeout",
    "faker",
    "docker",
    "universal_pathlib",
    "deepdiff",
    "bs4",
    "pandas",

    # Connector specific deps
    "cryptography",
    "fsspec",
    "vertexai",
    "pyiceberg",
    "pyarrow",
    "networkx"
]
# Add constraints needed for CI
ci = [
    # consistency with local-inference-pin
    "protobuf<4.24",
    "grpcio>=1.65.5",
    # TODO: Pinned in transformers package, remove when that gets updated
    "tokenizers>=0.19,<0.20",
    # TODO: Constaint due to boto, with python before 3.10 not requiring openssl 1.1.1, remove when that gets
    # updated or we drop support for 3.9
    "urllib3<1.27",
    # TODO: Constriant due to aiobotocore, remove when that gets updates:
    "botocore<1.34.132",
    # TODO: Constriant due to both 8.5.0 and 8.4.0 being installed during pip-compile
    "importlib-metadata>=8.5.0",
    # TODO: Constraint due to boto, with python before 3.10 not requiring openssl 1.1.1, remove when that gets
    # updated or we drop support for 3.9
    "urllib3<1.27",
    "unstructured-client>= 0.25.8",
    "fsspec==2024.5.0",
    # python 3.12 support
    "wrapt>=1.14.0",
    "numpy<2",
    # deltalake >=0.23.0 currently has a bug with the versio of pyarrow it installs
    "deltalake<=0.22.0",
    # TODO: investigate breaking changed introduced in lancedb>0.15.0
    "lancedb<=0.15.0",
    # TODO: versions higher than this are missing the macos wheel
    "pykx==2.5.3",
]

[project.scripts]
unstructured-ingest = "unstructured_ingest.main:main"


[build-system]
requires = ["hatchling", "hatch-requirements-txt"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.coverage.report]
# TODO: Update as this improves
fail_under = 0

[tool.hatch.build.targets.wheel]
    packages = ["/unstructured_ingest"]

[tool.hatch.build.targets.sdist]
    packages = ["/unstructured_ingest"]
